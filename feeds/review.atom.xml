<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>kmohajery_blog</title><link href="https://KhaterehMohajery.github.io/" rel="alternate"></link><link href="https://KhaterehMohajery.github.io/feeds/review.atom.xml" rel="self"></link><id>https://KhaterehMohajery.github.io/</id><updated>2017-02-08T10:20:00+01:00</updated><entry><title>Virtual Environment</title><link href="https://KhaterehMohajery.github.io/virtual-environment.html" rel="alternate"></link><published>2017-02-08T10:20:00+01:00</published><updated>2017-02-08T10:20:00+01:00</updated><author><name>Khatereh Mohajery</name></author><id>tag:KhaterehMohajery.github.io,2017-02-08:virtual-environment.html</id><summary type="html">&lt;p&gt;Working on my Capstone project for the Data Science Immersive program at GA, I required to work with timeseries. Specifically, I needed to work with a library that was only available on a development version of statsmodel package. One thing I could do was to download the development version of statsmodel from github and set it up by running the setup.py to replace the current official statmodel version. However, this could mess up all the tested and working libraries and I did not want to risk that. So, instead I decided to make a virtual environment and set the version of python and libraries I needed in that environment without any interference with outside of that environment. To create a virtual environment follow these simple steps:
Install virtualenv using pip:&lt;/p&gt;
&lt;p&gt;$ pip install virtualenv&lt;/p&gt;
&lt;p&gt;Create a virtual environment for this specific project you are working on:&lt;/p&gt;
&lt;p&gt;$ cd project_folder
$ virtualenv venv&lt;/p&gt;
&lt;p&gt;virtualenv venv creates a folder in the current directory which will contain the Python executable files, and a copy of the pip library which you can use to install other packages. The name of the environment (venv in this case) can be anything.
This creates a copy of Python in the folder that you created for virtual environment. You can also use your version of choice for Python (like python 2.7).&lt;/p&gt;
&lt;p&gt;$ virtualenv -p /usr/bin/python2.7 venv&lt;/p&gt;
&lt;p&gt;To activate the virtual environment, try:&lt;/p&gt;
&lt;p&gt;$ source venv/bin/activate&lt;/p&gt;
&lt;p&gt;and when done working with it type:&lt;/p&gt;
&lt;p&gt;$ deactivate
In order to install packages you can use:&lt;/p&gt;
&lt;p&gt;$ pip install requests&lt;/p&gt;
&lt;p&gt;Also note running virtualenv with the option --no-site-packages will not include the packages that are installed globally which gives you the flexibility to use your required version of packages.&lt;/p&gt;</summary></entry><entry><title>Regular Expression</title><link href="https://KhaterehMohajery.github.io/regular-expression.html" rel="alternate"></link><published>2017-01-08T10:20:00+01:00</published><updated>2017-01-08T10:20:00+01:00</updated><author><name>Khatereh Mohajery</name></author><id>tag:KhaterehMohajery.github.io,2017-01-08:regular-expression.html</id><summary type="html">&lt;p&gt;Regular Expressions are among the most amazing and helpful things you can have specially when you are working with text data. It is much easier to find patterns, groups or specific characters using regular expression (aka regex).
There are few ones that are specially very helpful:
such as:
\d  any digit
\D Any Non-digit character
+ one or more repetition 
[abc] Only a, b, or c
[^abc] Not a, b nor c
\w  Any Alphanumeric character
\W  Any Non-alphanumeric character
\s Any whitespace
\S any Non-whitespace 
^ $ starts and ends
? optional character 
some example :
\d+ gives you any numbers (integers)
ab?c matches either the strings "abc" or "ac" because the b is considered optional
^Hello matches each line that starts with Hello
bye$  matches each line that end with bye
'^\W+|\W+$' gets rid of punctuations
Use regular expressions with split, replace, stripe methods on strings in pandas and you can easily deal with your messy text data!&lt;/p&gt;</summary></entry><entry><title>Why Python?</title><link href="https://KhaterehMohajery.github.io/why-python.html" rel="alternate"></link><published>2016-12-27T10:20:00+01:00</published><updated>2016-12-27T10:20:00+01:00</updated><author><name>Khatereh Mohajery</name></author><id>tag:KhaterehMohajery.github.io,2016-12-27:why-python.html</id><summary type="html">&lt;p&gt;As I mentioned in my first blog post, I am going to write a short blog about one or two interesting thing I learned about data. Or, just a practical instruction on something I struggled to figure out and it might of help to others to know.
In the first week of the program, we delved into python programming focusing on working with pandas library. It is amazing to realize how powerful this tool is and how easy it makes to work with the data. I am sure that once you get the hold of the it you never go back to work with Excel! yes, I said this! Along with the matplotlib and seaborn libraries for visualization and statistical libraries such as sklrean you can do almost anything with data. Like many others, I previously depended on Excel or Matlab to work with data.
While Excel provides a user friendly visual interface, you are very limited on what you can do with data compare to pandas.
While Matlab is very powerful in terms of mathematical functionality, there are few drawbacks to it. First of all it is not free as opposed to  Pyhton or R which are open source. And, the advanced mathematical packages are not cheap! Furthermore, some manipulations that can be done in one line of code in python pandas, require several for loops in Matlab. 
As a final note, since R was developed by statisticians for the original purpose of working with data, it has very powerful statistical libraries and comparable capabilities in data manipulation with python. However, when it comes to programming language, python is definitely more powerful.
And, if you decide to try pandas, do not worry! There are abundant tutorials and examples on the web in addition to self explanatory python pages that are available for each method or function in python. And, you can find the answer to almost any question you have on stackoverflow or other python pages. 
Good Luck and enjoy python!&lt;/p&gt;</summary></entry><entry><title>My First Entry-checked</title><link href="https://KhaterehMohajery.github.io/my-first-entry-checked.html" rel="alternate"></link><published>2016-12-22T10:20:00+01:00</published><updated>2016-12-22T10:20:00+01:00</updated><author><name>Khatereh Mohajery</name></author><id>tag:KhaterehMohajery.github.io,2016-12-22:my-first-entry-checked.html</id><summary type="html">&lt;p&gt;This is the first entry  I am putting in my blog.  I am so excited to start a path to become a data scientist. For a while I was doubtful of what I want to do with my life. But now that I started learning more about data, its usage and implications and the statistical and programming tools to be able to efficiently handle and work with data, I think I finally found something that I really like to do and enjoy. 
Stay tuned to my next post where I will share some of cool stuff I learnt during few weeks of doing General Assembly Data Immersive program.&lt;/p&gt;</summary></entry></feed>